package com.alura.foro.controller;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.util.UriComponentsBuilder;

import com.alura.foro.domain.topico.DatosActualizarTopico;
import com.alura.foro.domain.topico.DatosDetalleTopico;
import com.alura.foro.domain.topico.DatosRegistrarTopico;
import com.alura.foro.domain.topico.RegistroDeTopicoService;
import com.alura.foro.domain.topico.DatosRegistrarTopico;
import com.alura.foro.domain.topico.Topico;
import com.alura.foro.domain.topico.TopicoRepository;

import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import jakarta.transaction.Transactional;
import jakarta.validation.Valid;

@RestController
@RequestMapping("/topicos")
@SecurityRequirement(name = "bearer-key")
public class TopicoController {
	
	@Autowired
	private RegistroDeTopicoService service;
	
	@PostMapping
	public ResponseEntity<DatosDetalleTopico> registrarTopico(@RequestBody @Valid DatosRegistrarTopico datos,  UriComponentsBuilder uriComponentsBuilder) {
		System.out.println(datos);
		return service.registrarTopico(datos, uriComponentsBuilder);
		
	}		  
	
	@GetMapping
	public ResponseEntity<Page<DatosDetalleTopico>> listadoTopicos(@PageableDefault(size=5) Pageable paginacion) {
		return service.listadoTopicos(paginacion);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<DatosDetalleTopico> retornarDatosTopico(@PathVariable Long id) {
		var response = service.retornarDatosTopico(id);
		return ResponseEntity.ok(response);
	}
	
	@PutMapping("/{id}")
	@Transactional
	public ResponseEntity actualizarTopico(@RequestBody DatosActualizarTopico datosActualizarTopico, 
			@PathVariable Long id) {
		var response = service.actualizarTopico(id, datosActualizarTopico);
		return ResponseEntity.ok(response);
	}
	
	@DeleteMapping("/{id}")
	@Transactional
	public ResponseEntity eliminarTopico(@PathVariable Long id) {
		service.eliminarTopico(id);
		return ResponseEntity.noContent().build();
	}
}
